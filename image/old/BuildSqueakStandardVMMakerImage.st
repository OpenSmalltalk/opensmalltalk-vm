| manifest load |manifest := #(('http://source.squeak.org/VMMaker'				1	( 'update'))).load := (manifest collect:				[:tuple|				[:path :order :packages| | repository |				repository := MCHttpRepository								location: path								user: 'squeak'								password: 'squeak'.				MCRepositoryGroup default addRepository: repository.				{repository. order. packages}] valueWithArguments: tuple])			sort: [:a :b| a second <= b second].#(	'FT2Constants.st'	'Object-performwithwithwithwithwith.st'	'CompiledMethod-usesAlternateBytecodeSet.st'	'FileDirectory-on-methods.st'	) do:	[:fileName| (FileDirectory default fileNamed: fileName) fileIn].load do:	[:tuple|	 [:repository :order :packages|	  packages do:		[:package| | latestVersion |		latestVersion := (repository versionNamesForPackageNamed: package) first.		[| version |		version := ((MCCacheRepository default includesVersionNamed: latestVersion)					ifTrue: [MCCacheRepository default]					ifFalse: [repository]) versionNamed: latestVersion.		 version load.                ]			on: Warning			do: [:ex|				(ex messageText beginsWith: 'This package depends on the following classes') ifFalse:					[ex pass].				ex resume]]]		valueWithArguments: tuple].World findATranscript: nil.VMMakerTool openInWorld.#( 'VMMakerTool') reverse do:	[:textFileName|	(StringHolder new contents: (FileDirectory default fileNamed: textFileName, '.text') contentsOfEntireFile)		openLabel: textFileName].(Utilities classPool at: #CommonRequestStrings) ifNotNil:	[:crs|	crs contents: crs contents, '\-\VMMaker generateConfiguration\VMMaker generateAllConfigurationsUnderVersionControl\VMClass openCogMultiWindowBrowser\VMClass openObjectMemoriesInterpretersBrowser' withCRs].CodeHolder useMultiWindowBrowsers: true.Smalltalk snapshot: true andQuit: true