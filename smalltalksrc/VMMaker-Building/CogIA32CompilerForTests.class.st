Class {
	#name : #CogIA32CompilerForTests,
	#superclass : #CogIA32Compiler,
	#category : #'VMMaker-Tests'
}

{ #category : #'test support' }
CogIA32CompilerForTests class >> dataRegistersWithAccessorsDo: aTrinaryBlock [
	self registers withIndexDo:
		[:reg :i|
		aTrinaryBlock
			value: reg
			value: (#(eax ecx edx ebx esp ebp esi edi) at: i)
			value: (#(eax: ecx: edx: ebx: esp: ebp: esi: edi:) at: i)]
]

{ #category : #'test support' }
CogIA32CompilerForTests class >> dataRegistersWithAccessorsExcept: accessorsToExclude do: aTrinaryBlock [
	self registers withIndexDo:
		[:reg :i| | getter setter |
		getter := #(eax ecx edx ebx esp ebp esi edi) at: i.
		setter := #(eax: ecx: edx: ebx: esp: ebp: esi: edi:) at: i.
		(accessorsToExclude includes: getter) ifFalse:
			[aTrinaryBlock value: reg value: getter value: setter]]
]

{ #category : #'test support' }
CogIA32CompilerForTests class >> registers [
	^{ EAX. ECX. EDX. EBX. ESP. EBP. ESI. EDI } "a.k.a. (0 to: 7)"
]

{ #category : #'test support' }
CogIA32CompilerForTests class >> registersWithNamesDo: aBinaryBlock [
	self registers
		with: #('%eax' '%ecx' '%edx' '%ebx' '%esp' '%ebp' '%esi' '%edi')
		do: aBinaryBlock
]

{ #category : #'test support' }
CogIA32CompilerForTests class >> xmmRegistersWithNamesDo: aBinaryBlock [
	{XMM0L. XMM1L. XMM2L. XMM3L. XMM4L. XMM5L. XMM6L. XMM7L}
		with: #('%xmm0' '%xmm1' '%xmm2' '%xmm3' '%xmm4' '%xmm5' '%xmm6' '%xmm7')
		do: aBinaryBlock
]

{ #category : #encoding }
CogIA32CompilerForTests >> concreteRegister: value [
	^value
]
