ifndef THIRDPARTYDIR
	include ../common/Makefile.lib.extra
endif
include ../../third-party/libgit2.spec

# plugin definitions
LIBGIT2URL:=$(libgit2_spec_download_url)
LIBGIT2LIBNAME:=$(libgit2_spec_product_name_macOS)
LIBGIT2DIR:=$(THIRDPARTYDIR)/$(libgit2_spec_unpack_dir_name)
LIBGIT2ARCHIVE:=$(THIRDPARTYCACHEDIR)/$(libgit2_spec_archive_name)
LIBGIT2LIB:=$(THIRDPARTYINSTALLDIR)/$(LIBGIT2LIBNAME)
LIBGIT2SYMLINKS:=$(libgit2_spec_symlinks_macOS)

# ensure third-party library is built and recognised by plugins
INCDIRS:=$(INCDIRS) $(THIRDPARTYINCLUDEDIR)
EXTRALIBS:=$(EXTRALIBS) $(LIBGIT2LIB)
PLUGINREQS:=$(THIRDPARTYLIBS)

$(LIBGIT2ARCHIVE): 
	curl -o $(LIBGIT2ARCHIVE) -L $(LIBGIT2URL) 

$(THIRDPARTYLIBDIR)/$(LIBGIT2LIBNAME): $(LIBGIT2ARCHIVE)
	tar x -f $(LIBGIT2ARCHIVE) -C $(THIRDPARTYDIR)
	cd $(LIBGIT2DIR) \
		&& cmake \
			-DCMAKE_INSTALL_PREFIX=$(THIRDPARTYOUTDIR) \
			-DUSE_SSH=ON \
			-DCURL=ON \
			-DBUILD_CLAR=OFF \
			-DOPENSSL_FOUND=ON \
			-DLIBSSH2_FOUND=ON \
			-DLIBSSH2_INCLUDE_DIRS=$(THIRDPARTYINCLUDEDIR) \
			-DLIBSSH2_LIBRARIES=$(THIRDPARTYLIBDIR)/libssh2.1.dylib \
			-DCMAKE_C_FLAGS="-m64 -L$(THIRDPARTYLIBDIR) -lssl -lcrypto -liconv" \
			-DCMAKE_OSX_ARCHITECTURES=x86_64 \
			-DCMAKE_SHARED_LINKER_FLAGS=-Wl,-rpath,@executable_path:@executable_path/Plugins \
		&& make \
		&& make install

$(LIBGIT2LIB): libssh2 $(THIRDPARTYLIBDIR)/$(LIBGIT2LIBNAME)
	cp -f $(THIRDPARTYLIBDIR)/$(LIBGIT2LIBNAME) $(THIRDPARTYINSTALLDIR)
	install_name_tool -id "@executable_path/Plugins/$(LIBGIT2LIBNAME)" $(LIBGIT2LIB)
	@echo "Installing links"
	@for each in $(THIRDPARTYLIBDIR)/$(LIBGIT2SYMLINKS); do \
		if [ -L $$each ]; then \
			cp -a $$each $(THIRDPARTYINSTALLDIR); \
		fi \
	done
	@echo "Fixing dependency links"
	install_name_tool -change "$(THIRDPARTYLIBDIR)/" "@executable_path/Plugins/$(LIBSSH2LIBNAME)" $(LIBGIT2LIB)
	# libssh2 has a dependency with openssl libraries (they come in OPENSSLALLLIBNAMES var)
	@for each in $(OPENSSLALLLIBNAMES) $(LIBSSH2LIBNAME); do \
		install_name_tool -change "$(THIRDPARTYLIBDIR)/$$each" "@executable_path/Plugins/$$each" $(LIBGIT2LIB); \
	done
	@echo "DONE"
	
libgit2: $(LIBGIT2LIB)