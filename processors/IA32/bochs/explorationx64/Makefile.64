BOCHS=../../../processors/IA32/bochs
BOCHSEXP=$(BOCHS)/explorationx64
LIBDEPS=../../cpu/libcpu.a
CFLAGS=-m64 -DCOG=1 -DFOR64BITS=1 -I.. -I$(BOCHS) -I$(BOCHS)/cpu -I$(BOCHS)/instrument/stubs -L../cpu -lcpu

.PHONY:	$(LIBDEPS)

CLASS=BochsX64Alien64

all: $(CLASS)-regs.st $(CLASS)-cr.st $(CLASS)-xmm.st

$(CLASS)-regs.st: printcpu64
	./printcpu64 >$(CLASS)-regs.st

$(CLASS)-cr.st: printcpu64cr
	./printcpu64cr >$(CLASS)-cr.st

$(CLASS)-xmm.st: printcpu64xmm
	./printcpu64xmm >$(CLASS)-xmm.st

clean:
	rm -f $(CLASS)-regs.st $(CLASS)-cr.st $(CLASS)-xmm.st
	rm -f printcpu64 printcpu64cr printcpu64xmm
	rm -f printcpu64.exe printcpu64cr.exe printcpu64xmm.exe

printcpu64: $(BOCHSEXP)/printcpu.c $(LIBDEPS)
	g++ -o $@ $< $(CFLAGS)

printcpu64cr: $(BOCHSEXP)/printcpucr.c $(LIBDEPS)
	g++ -o $@ $< $(CFLAGS)

printcpu64xmm: $(BOCHSEXP)/printcpuxmm.c $(LIBDEPS)
	g++ -o $@ $< $(CFLAGS)
