#############################################################################
# Compilation flags & paths for Mac OS X
#
# These are derived from Xcode v 6.2 for Apple LLVM version 6.0 (clang-600.0.57)

XCODE:=$(shell /usr/bin/xcode-select -p)
ifneq (,$(shell /usr/bin/xcodebuild -version | grep " 1[2-9]\."))
$(info **************************** WARNING ********************************)
$(info ***                                                               ***)
$(info ***      32-bit builds on Xcode 12 & Big Sur et al may fail!      ***)
$(info ***                                                               ***)
$(info **************************** WARNING ********************************)
endif
XCUB:=$(XCODE)/usr/bin
SDKsDIR:=$(XCODE)/Platforms/MacOSX.platform/Developer/SDKs
#Build the oldest SDK installed
SDKs:=MacOSX10.9.sdk MacOSX10.10.sdk MacOSX10.11.sdk MacOSX10.12.sdk MacOSX10.13.sdk MacOSX10.14.sdk
ifeq ($(SDK),)
SDK:=$(firstword $(realpath $(addprefix $(SDKsDIR)/, $(SDKs))))
else # Allow Makefile to set specific SDK
override SDK:=$(realpath $(addprefix $(SDKsDIR)/, $(SDK)))
endif
ifeq ($(strip $(SDK)),)
  ifeq ($(wildcard $(realpath $(addprefix $(SDKsDIR)/,MacOSX.sdk))),)
    $(error could not find a valid SDK)
  else
    SDK:=$(realpath $(addprefix $(SDKsDIR)/,MacOSX.sdk))
  endif
endif
TARGET_ARCH:=i386
ifeq ($(TARGET_VERSION_MIN),) # Allow Makefile to set TARGET_VERSION_MIN
TARGET_VERSION_MIN:=10.9
endif

# Determine where to install plugins in the .app bundle using the Squeak
# scheme (which tries to follow Apple's approach).  We would like this to
# be Contents/PlugIns, but for reasons not yet understood, this breaks
# Terf's libAgpu load.  So for now we keep it as Contents/Resources.
APPPLUGINDIR:=PlugIns
APPPLUGINDIR:=Resources

print-sdks:
	$(info ---------------- Makefile.flags settings ------------------)
	$(info SDKs=$(realpath $(addprefix $(SDKsDIR)/, $(SDKs))))
	$(info SDK=$(SDK))
	$(info -----------------------------------------------------)

# N.B. ARC isn't supported by the os-x 32-bit legacy Objective-C runtime kernel.
# ARC is supported only on 64-bits, and then only for the 10.7 SDK and later.
include ../common/Makefile.clangversion
ifdef CLANG_7_3_OR_ABOVE
	OBJC_CODE_MODEL := -fobjc-weak
else
	OBJC_CODE_MODEL := -fno-objc-arc
endif
CFLAGS:=$(CFLAGS) -DBUILD_FOR_OSX=1 -DUSE_OPENGL=1 -DUSE_CORE_GRAPHICS=1 \
		-arch $(TARGET_ARCH) \
		-mmacosx-version-min=$(TARGET_VERSION_MIN) -msse4.2 \
			-fvisibility=default \
			-fmacro-backtrace-limit=0 -fdiagnostics-show-note-include-stack \
			-fmessage-length=0 -fpascal-strings -fasm-blocks -fstrict-aliasing \
			$(XCFLAGS) \
		-isysroot $(SDK) \
		-include $(PLATDIR)/iOS/vm/SqueakPureObjc_Prefix.pch

BFLAGS:=-arch $(TARGET_ARCH) \
		-bundle \
		-isysroot $(SDK) \
		-Wl,-rpath,@executable_path/../Frameworks \
		-Wl,-rpath,@executable_path/../$(APPPLUGINDIR) \
		$(EXTRABFLAGS)

DYFLAGS:=-arch $(TARGET_ARCH) \
		-shared \
		-isysroot $(SDK) \
		$(EXTRADYFLAGS)

WARNINGS:= -Wno-missing-field-initializers -Wno-missing-prototypes \
	-Wno-missing-braces -Wparentheses -Wswitch -Wno-unused-function \
	-Wno-unused-label -Wno-unused-parameter -Wunused-variable -Wunused-value \
	-Wno-empty-body -Wno-uninitialized -Wno-unknown-pragmas -Wno-shadow \
	-Wno-four-char-constants -Wno-conversion -Wno-constant-conversion \
	-Wno-int-conversion -Wno-bool-conversion -Wno-enum-conversion \
	-Wno-sign-conversion -Wno-shorten-64-to-32 -Wpointer-sign -Wno-newline-eof \
	-Wno-trigraphs -Wdeprecated-declarations

FRAMEWORKS?=-fobjc-link-runtime \
			-framework Foundation -framework OpenGL -framework Cocoa \
			-framework AudioToolbox -framework CoreAudio -framework QuickTime \
			-framework SystemConfiguration \
			-framework ApplicationServices -framework Security \
			-framework QuartzCore 
